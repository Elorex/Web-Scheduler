## HEAT Templates originally written by Carl Janzen, minor updates by Mitchell Calder
## Source: git@cisgitlab.ufv.ca:201901COMP351AB1s00/heat-templates.git 
heat_template_version: 2014-10-16

description: HOT template for a single node

parameters:
    
  image_name:
    type: string
    description: Image Name
    default: "Ubuntu 18.04"
 
  deploy_private_key:
    type: string
    description: Private Key for Deploy keypair

  deploy_public_key:
    type: string
    description: Public key for Deploy keypair

  public_keys_url:
    type: string
    description: url of public keys to add to authorized_keys file (refreshes every 15 minutes)

  deploy_repository:
    type: string
    description: git repository of app to be deployed
    default: "git@cisgitlab.ufv.ca:201901COMP351AB1g03/webdesignproject.git"

  public_net:
    type: string
    description: public network 
    default: "ssh-proxy"    
   
  private_net:
    type: string
    description: private network
    default: "default" 


resources:

  port:
    type: OS::Neutron::Port
    properties:
      network: { get_param: private_net }

  floating_ip:
    type: OS::Neutron::FloatingIP
    properties:
      floating_network: { get_param: public_net }
      port_id: { get_resource: port}

  host:
    type: OS::Nova::Server
    properties:
      name: {get_param: 'OS::stack_name' }
      config_drive: true
      image: { get_param: image_name }
      flavor: m1.small
      networks:
        - port: { get_resource: port }
      user_data_format: RAW
      user_data:
        str_replace:
          template: |
            #cloud-config

            hostname: $STACK_NAME
            manage_etc_hosts: true

            groups:
            - docker: [ubuntu]

            users:
            - default

            write_files:
            - owner: root:root
              path: /etc/cron.d/refresh_keys
              permissions: '0644'
              content: |
                # refresh authorized keys every 15 minutes
                '*/15 * * * * root /usr/local/bin/refresh_keys.sh >/dev/null 2>&1'
                # this file requires a newline on the last line

            - owner: root:root
              path: /usr/local/bin/refresh_keys.sh
              permissions: '0755'
              content: |
                #!/usr/bin/env bash
                # exit if KEYS_URL is blank
                [ -z "$KEYS_URL" ] && exit 0

                # fetch new copy of public keys
                rm -f /tmp/fetched_keys || exit 1
                touch /tmp/fetched_keys || exit 1
                chmod 0600 /tmp/fetched_keys || exit 1
                curl $KEYS_URL > /tmp/fetched_keys

                # update every authorized_keys file
                cd /home
                for fn in * ; do
                [ -e "${fn}/.ssh/authorized_keys" ] && {
                    rm -f /tmp/$$authorized_keys
                    touch /tmp/$$authorized_keys
                    chmod 0600 /tmp/$$authorized_keys
                    cat "${fn}/.ssh/authorized_keys" > /tmp/$$authorized_keys
                    cat /tmp/fetched_keys >> /tmp/$$authorized_keys
                    sort -u /tmp/$$authorized_keys > "${fn}/.ssh/authorized_keys"
                    rm -f /tmp/$$authorized_keys
                }
                rm -f /tmp/fetched_keys
                done
              
            - owner: root:root
              path: /root/.ssh/id_ecdsa
              permissions: '0700'
              content: "$DEPLOY_PRIVATE_KEY"

            - owner: root:root
              path: /root/.ssh/known_hosts
              permissions: "0700"
              content: |
                |1|RuoSqHzefm+po0lROh9OZ0nTL6o=|v4is+inKzL6cyrTU2s2j5BDLa48= ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBNeSsic9srpBTVXlsKU2Uy6vmhAIKXJlsNkKuwQpfpcBk63AScENpW2RXeWGPn34+OMmnfGUkbG4wNhHq557vj4=
                |1|8SPQOJ3zUTiFH2bsgb7EIaH+ziA=|VXKetidlNnVw4N8SBjfR3zDYUTs= ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBNeSsic9srpBTVXlsKU2Uy6vmhAIKXJlsNkKuwQpfpcBk63AScENpW2RXeWGPn34+OMmnfGUkbG4wNhHq557vj4=  
              

            #- owner: root:root
            #  path: /root/.ssh/config
            #  permissions: '0700'
            #  content: |
            #    Host cisgitlab.ufv.ca
            #    IdentityFile /root/.ssh/id_rsa    
 

            runcmd:
            # set permissions in case write_files above created .ssh
            - chmod 0700 /root/.ssh
            - /usr/local/bin/refresh_keys.sh
            - sed -i 's/%/\n/g' /root/.ssh/id_ecdsa
            #- /root/.ssh/id_ecdsa
            # replace % with newlines to put private key in correct format  
            # retrieve script to setup proxy, and install docker and docker-compose 
            # clone application and run it
            - mkdir -p /code
            - cd / && sudo git clone git@cisgitlab.ufv.ca:201901COMP351AB1g03/webdesignproject.git /code
            - apt-get --assume-yes install python3
            - apt update
            - apt install --assume-yes python3-pip
            - pip3 install django
            - snap install ngrok
            - pip3 install django_otp
            - pip3 install django-otp-yubikey
            - pip3 install django-two-factor-auth
            - ngrok authtoken 2MAvz6oxyiyMtxiUzjvrd_4nAyqwHf5C1pcqvgbB1zM
            - cd /code
            - nohup python3 manage.py runserver &
            - nohup ngrok http 8000 &
            


            
          params:  
            $STACK_NAME: {get_param: 'OS::stack_name'}
            $KEYS_URL : {get_param: public_keys_url }
            $DEPLOY_PRIVATE_KEY: {get_param: deploy_private_key}
            $DEPLOY_REPOSITORY: {get_param: deploy_repository } 
